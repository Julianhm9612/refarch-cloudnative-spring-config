buildscript {
	ext {
		springBootVersion = '1.5.7.RELEASE'
	}
	repositories {
		mavenCentral()
        maven {
          url 'https://plugins.gradle.org/m2/'
        }
        jcenter()
	}
	dependencies {
		classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
        classpath 'gradle.plugin.com.palantir.gradle.docker:gradle-docker:0.13.0'
	}
}

apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'org.springframework.boot'
apply plugin: 'com.palantir.docker'

jar {
    baseName = 'spring-config-server'
    version =  '0.0.1-SNAPSHOT'
}

repositories {
    mavenCentral()
}

sourceCompatibility = 1.8
targetCompatibility = 1.8

dependencyManagement {
     imports {
          mavenBom "org.springframework.cloud:spring-cloud-starter-parent:Dalston.SR1"
     }
}

dependencies {
    compile('org.springframework.cloud:spring-cloud-config-server')
    compile('org.springframework.cloud:spring-cloud-starter-eureka')
    testCompile('org.springframework.boot:spring-boot-starter-test')
}

eclipse {
	classpath {
		 containers.remove('org.eclipse.jdt.launching.JRE_CONTAINER')
		 containers 'org.eclipse.jdt.launching.JRE_CONTAINER/org.eclipse.jdt.internal.debug.ui.launcher.StandardVMType/JavaSE-1.8'
	}
}

docker {
  name "jkwong/${jar.baseName}:latest"
  copySpec.into("/")
    .include("**/${jar.baseName}-${jar.version}.jar")
    .from("build/libs") 
    .rename("${jar.baseName}-${jar.version}.jar", "app.jar")
  files "app.jar"
  dockerfile file ('src/main/docker/Dockerfile')
}

